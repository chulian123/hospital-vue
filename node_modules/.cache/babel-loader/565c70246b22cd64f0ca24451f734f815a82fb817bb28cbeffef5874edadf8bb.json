{"ast":null,"code":"import E from 'wangeditor';\nlet editor;\nfunction initWangEditor(content) {\n  setTimeout(() => {\n    if (!editor) {\n      editor = new E('#editor');\n      editor.config.placeholder = '请输入内容';\n      editor.config.uploadFileName = 'file';\n      editor.config.uploadImgServer = 'http://localhost:9090/files/wang/upload';\n      editor.create();\n    }\n    editor.txt.html(content);\n  }, 0);\n}\nexport default {\n  name: \"Record\",\n  data() {\n    return {\n      tableData: [],\n      // 所有的数据\n      pageNum: 1,\n      // 当前的页码\n      pageSize: 10,\n      // 每页显示的个数\n      total: 0,\n      title: null,\n      fromVisible: false,\n      form: {},\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      rules: {\n        inhospital: [{\n          required: true,\n          message: '请选择是否住院',\n          trigger: 'blur'\n        }]\n      },\n      ids: [],\n      viewContent: null,\n      editorVisible: false\n    };\n  },\n  created() {\n    this.load(1);\n  },\n  methods: {\n    registration(row) {\n      let data = JSON.parse(JSON.stringify(row));\n      data.inhostpitalRecord = '是';\n      this.$request.put('/record/update', data).then(res => {\n        if (res.code === '200') {\n          this.load(1);\n          this.toRegistration(row.userId);\n        }\n      });\n    },\n    toRegistration(userId) {\n      let data = {\n        userId: userId,\n        hosStatus: '住院中'\n      };\n      this.$request.post('/registration/add', data).then(res => {\n        if (res.code === '200') {\n          this.$message.success('登记成功');\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    viewEditor(content) {\n      this.viewContent = content;\n      this.editorVisible = true;\n    },\n    cancel() {\n      this.fromVisible = false;\n      location.href = '/record';\n    },\n    handleEdit(row) {\n      // 编辑数据\n      this.form = JSON.parse(JSON.stringify(row)); // 给form对象赋值  注意要深拷贝数据\n      initWangEditor(this.form.medicalRecord || '');\n      this.fromVisible = true; // 打开弹窗\n    },\n\n    save() {\n      // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.form.medicalRecord = editor.txt.html();\n      this.$request.put('/record/update', this.form).then(res => {\n        if (res.code === '200') {\n          // 表示成功保存\n          this.$message.success('保存成功');\n          this.load(1);\n          this.fromVisible = false;\n        } else {\n          this.$message.error(res.msg); // 弹出错误的信息\n        }\n      });\n    },\n\n    del(id) {\n      // 单个删除\n      this.$confirm('您确定删除吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/record/delete/' + id).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    handleSelectionChange(rows) {\n      // 当前选中的所有的行数据\n      this.ids = rows.map(v => v.id); //  [1,2]\n    },\n\n    delBatch() {\n      // 批量删除\n      if (!this.ids.length) {\n        this.$message.warning('请选择数据');\n        return;\n      }\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/record/delete/batch', {\n          data: this.ids\n        }).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    load(pageNum) {\n      // 分页查询\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get('/record/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          title: this.title\n        }\n      }).then(res => {\n        this.tableData = res.data?.list;\n        this.total = res.data?.total;\n      });\n    },\n    reset() {\n      this.title = null;\n      this.load(1);\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum);\n    }\n  }\n};","map":{"version":3,"names":["E","editor","initWangEditor","content","setTimeout","config","placeholder","uploadFileName","uploadImgServer","create","txt","html","name","data","tableData","pageNum","pageSize","total","title","fromVisible","form","user","JSON","parse","localStorage","getItem","rules","inhospital","required","message","trigger","ids","viewContent","editorVisible","created","load","methods","registration","row","stringify","inhostpitalRecord","$request","put","then","res","code","toRegistration","userId","hosStatus","post","$message","success","error","msg","viewEditor","cancel","location","href","handleEdit","medicalRecord","save","del","id","$confirm","type","response","delete","catch","handleSelectionChange","rows","map","v","delBatch","length","warning","get","params","list","reset","handleCurrentChange"],"sources":["src/views/manager/Record.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"search\">\r\n      <el-input placeholder=\"请输入标题查询\" style=\"width: 200px\" v-model=\"title\"></el-input>\r\n      <el-button type=\"info\" plain style=\"margin-left: 10px\" @click=\"load(1)\">查询</el-button>\r\n      <el-button type=\"warning\" plain style=\"margin-left: 10px\" @click=\"reset\">重置</el-button>\r\n    </div>\r\n\r\n    <div class=\"table\">\r\n      <el-table :data=\"tableData\" stripe  @selection-change=\"handleSelectionChange\">\r\n        <el-table-column prop=\"id\" label=\"序号\" width=\"80\" align=\"center\" sortable></el-table-column>\r\n        <el-table-column prop=\"userName\" label=\"患者姓名\" show-overflow-tooltip></el-table-column>\r\n        <el-table-column prop=\"doctorName\" label=\"医生姓名\" show-overflow-tooltip></el-table-column>\r\n        <el-table-column prop=\"time\" label=\"就诊时间\"></el-table-column>\r\n        <el-table-column prop=\"medicalRecord\" label=\"医嘱病历\">\r\n          <template v-slot=\"scope\">\r\n            <el-button type=\"primary\" size=\"mini\" @click=\"viewEditor(scope.row.medicalRecord)\">查看病历</el-button>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"inhospital\" label=\"是否住院\"></el-table-column>\r\n        <el-table-column prop=\"inhostpitalRecord\" label=\"是否住院登记\"></el-table-column>\r\n\r\n        <el-table-column label=\"操作\" width=\"180\" align=\"center\">\r\n          <template v-slot=\"scope\">\r\n            <el-button plain type=\"primary\" v-if=\"user.role === 'DOCTOR'\" @click=\"handleEdit(scope.row)\" size=\"mini\">填写医嘱病历</el-button>\r\n            <el-button plain type=\"primary\" v-if=\"user.role === 'ADMIN' && scope.row.inhospital === '是' && scope.row.inhostpitalRecord === '否'\" @click=\"registration(scope.row)\" size=\"mini\">住院登记</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <div class=\"pagination\">\r\n        <el-pagination\r\n            background\r\n            @current-change=\"handleCurrentChange\"\r\n            :current-page=\"pageNum\"\r\n            :page-sizes=\"[5, 10, 20]\"\r\n            :page-size=\"pageSize\"\r\n            layout=\"total, prev, pager, next\"\r\n            :total=\"total\">\r\n        </el-pagination>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <el-dialog title=\"医嘱病历填写\" :visible.sync=\"fromVisible\" width=\"60%\" :close-on-click-modal=\"false\" destroy-on-close @close=\"cancel\">\r\n      <el-form label-width=\"100px\" style=\"padding-right: 50px\" :model=\"form\" :rules=\"rules\" ref=\"formRef\">\r\n        <el-form-item prop=\"medicalRecord\" label=\"医嘱病历\">\r\n          <div id=\"editor\"></div>\r\n        </el-form-item>\r\n        <el-form-item prop=\"inhospital\" label=\"是否住院\">\r\n          <el-select v-model=\"form.inhospital\" placeholder=\"请选择\" style=\"width: 100%;\">\r\n            <el-option label=\"是\" value=\"是\"></el-option>\r\n            <el-option label=\"否\" value=\"否\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"fromVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"save\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n    <el-dialog title=\"医嘱病历\" :visible.sync=\"editorVisible\" width=\"50%\" :close-on-click-modal=\"false\" destroy-on-close>\r\n      <div v-html=\"this.viewContent\" class=\"w-e-text\"></div>\r\n    </el-dialog>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport E from 'wangeditor'\r\n\r\nlet editor\r\nfunction initWangEditor(content) {\tsetTimeout(() => {\r\n  if (!editor) {\r\n    editor = new E('#editor')\r\n    editor.config.placeholder = '请输入内容'\r\n    editor.config.uploadFileName = 'file'\r\n    editor.config.uploadImgServer = 'http://localhost:9090/files/wang/upload'\r\n    editor.create()\r\n  }\r\n  editor.txt.html(content)\r\n}, 0)\r\n}\r\nexport default {\r\n  name: \"Record\",\r\n  data() {\r\n    return {\r\n      tableData: [],  // 所有的数据\r\n      pageNum: 1,   // 当前的页码\r\n      pageSize: 10,  // 每页显示的个数\r\n      total: 0,\r\n      title: null,\r\n      fromVisible: false,\r\n      form: {},\r\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n      rules: {\r\n        inhospital: [\r\n          {required: true, message: '请选择是否住院', trigger: 'blur'},\r\n        ],\r\n      },\r\n      ids: [],\r\n      viewContent: null,\r\n      editorVisible: false,\r\n    }\r\n  },\r\n  created() {\r\n    this.load(1)\r\n  },\r\n  methods: {\r\n    registration(row) {\r\n      let data = JSON.parse(JSON.stringify(row))\r\n      data.inhostpitalRecord = '是'\r\n      this.$request.put('/record/update', data).then(res => {\r\n        if (res.code === '200') {\r\n          this.load(1)\r\n          this.toRegistration(row.userId)\r\n        }\r\n      })\r\n    },\r\n    toRegistration(userId) {\r\n      let data = {\r\n        userId: userId,\r\n        hosStatus: '住院中'\r\n      }\r\n      this.$request.post('/registration/add', data).then(res => {\r\n        if (res.code === '200') {\r\n          this.$message.success('登记成功')\r\n        } else {\r\n          this.$message.error(res.msg)\r\n        }\r\n      })\r\n    },\r\n    viewEditor(content) {\r\n      this.viewContent = content\r\n      this.editorVisible = true\r\n    },\r\n    cancel() {\r\n      this.fromVisible = false\r\n      location.href = '/record'\r\n    },\r\n    handleEdit(row) {   // 编辑数据\r\n      this.form = JSON.parse(JSON.stringify(row))  // 给form对象赋值  注意要深拷贝数据\r\n      initWangEditor(this.form.medicalRecord || '')\r\n      this.fromVisible = true   // 打开弹窗\r\n    },\r\n    save() {   // 保存按钮触发的逻辑  它会触发新增或者更新\r\n      this.form.medicalRecord = editor.txt.html()\r\n      this.$request.put('/record/update', this.form).then(res => {\r\n        if (res.code === '200') {  // 表示成功保存\r\n          this.$message.success('保存成功')\r\n          this.load(1)\r\n          this.fromVisible = false\r\n        } else {\r\n          this.$message.error(res.msg)  // 弹出错误的信息\r\n        }\r\n      })\r\n    },\r\n    del(id) {   // 单个删除\r\n      this.$confirm('您确定删除吗？', '确认删除', {type: \"warning\"}).then(response => {\r\n        this.$request.delete('/record/delete/' + id).then(res => {\r\n          if (res.code === '200') {   // 表示操作成功\r\n            this.$message.success('操作成功')\r\n            this.load(1)\r\n          } else {\r\n            this.$message.error(res.msg)  // 弹出错误的信息\r\n          }\r\n        })\r\n      }).catch(() => {\r\n      })\r\n    },\r\n    handleSelectionChange(rows) {   // 当前选中的所有的行数据\r\n      this.ids = rows.map(v => v.id)   //  [1,2]\r\n    },\r\n    delBatch() {   // 批量删除\r\n      if (!this.ids.length) {\r\n        this.$message.warning('请选择数据')\r\n        return\r\n      }\r\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {type: \"warning\"}).then(response => {\r\n        this.$request.delete('/record/delete/batch', {data: this.ids}).then(res => {\r\n          if (res.code === '200') {   // 表示操作成功\r\n            this.$message.success('操作成功')\r\n            this.load(1)\r\n          } else {\r\n            this.$message.error(res.msg)  // 弹出错误的信息\r\n          }\r\n        })\r\n      }).catch(() => {\r\n      })\r\n    },\r\n    load(pageNum) {  // 分页查询\r\n      if (pageNum) this.pageNum = pageNum\r\n      this.$request.get('/record/selectPage', {\r\n        params: {\r\n          pageNum: this.pageNum,\r\n          pageSize: this.pageSize,\r\n          title: this.title,\r\n        }\r\n      }).then(res => {\r\n        this.tableData = res.data?.list\r\n        this.total = res.data?.total\r\n      })\r\n    },\r\n    reset() {\r\n      this.title = null\r\n      this.load(1)\r\n    },\r\n    handleCurrentChange(pageNum) {\r\n      this.load(pageNum)\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}